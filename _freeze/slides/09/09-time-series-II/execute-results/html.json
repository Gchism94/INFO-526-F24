{
  "hash": "7eeaf1d7ecf272006cdb3054d5bc11b4",
  "result": {
    "markdown": "---\ntitle: Visualizing time series data II\nsubtitle: Lecture 9\ntitle-slide-attributes:\n  data-background-image: ../vizdata-bg.png\n  data-background-size: stretch\n  data-slide-number: none\nformat: revealjs\nhighlight-style: a11y\nexecute:\n  code-link: true\n  warning: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Warm up\n\n## Announcements\n\n-   ...\n\n## Setup {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(countdown)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(janitor)\nlibrary(colorspace)\nlibrary(broom)\nlibrary(fs)\n\n# set theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\n# set width of code output\noptions(width = 65)\n\n# set figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 7, # 7\" width\n  fig.asp = 0.618, # the golden ratio\n  fig.retina = 3, # dpi multiplier for displaying HTML output on retina\n  fig.align = \"center\", # center align figures\n  dpi = 300 # higher dpi, sharper image\n)\n```\n:::\n\n\n# Working with dates\n\n## AQI levels\n\nThe previous graphic in tibble form, to be used later...\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\naqi_levels <- tribble(\n  ~aqi_min, ~aqi_max, ~color,    ~level,\n  0,        50,       \"#D8EEDA\", \"Good\",\n  51,       100,      \"#F1E7D4\", \"Moderate\",\n  101,      150,      \"#F8E4D8\", \"Unhealthy for sensitive groups\",\n  151,      200,      \"#FEE2E1\", \"Unhealthy\",\n  201,      300,      \"#F4E3F7\", \"Very unhealthy\",\n  301,      400,      \"#F9D0D4\", \"Hazardous\"\n)\n```\n:::\n\n\n## AQI data\n\n-   Source: [EPA's Daily Air Quality Tracker](https://www.epa.gov/outdoor-air-quality-data/air-data-daily-air-quality-tracker)\n\n-   2016 - 2022 AQI (Ozone and PM2.5 combined) for Durham-Chapel Hill, NC core-based statistical area (CBSA), one file per year\n\n-   2016 - 2022 AQI (Ozone and PM2.5 combined) for San Francisco-Oakland-Hayward, CA CBSA, one file per year\n\n## 2022 Durham-Chapel Hill\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_2022 <- read_csv(\n  here::here(\"data/durham-chapel-hill/ad_aqi_tracker_data-2022.csv\"),\n  na = c(\".\", \"\")\n)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_2022 <- dch_2022 |>\n  janitor::clean_names() |>\n  mutate(date = mdy(date))\n\ndch_2022\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 365 × 11\n   date       aqi_value main_pol…¹ site_…² site_id source x20_y…³\n   <date>         <dbl> <chr>      <chr>   <chr>   <chr>    <dbl>\n 1 2022-01-01        22 PM2.5      Durham… 37-063… AQS        111\n 2 2022-01-02        12 PM2.5      Durham… 37-063… AQS         76\n 3 2022-01-03        10 PM2.5      Durham… 37-063… AQS         66\n 4 2022-01-04        21 PM2.5      Durham… 37-063… AQS         61\n 5 2022-01-05        35 PM2.5      Durham… 37-063… AQS         83\n 6 2022-01-06        29 PM2.5      Durham… 37-063… AQS         71\n 7 2022-01-07        15 PM2.5      Durham… 37-063… AQS         75\n 8 2022-01-08        28 PM2.5      Durham… 37-063… AQS         76\n 9 2022-01-09        28 PM2.5      Durham… 37-063… AQS         57\n10 2022-01-10        15 PM2.5      Durham… 37-063… AQS         71\n# … with 355 more rows, 4 more variables:\n#   x20_year_low_2000_2019 <dbl>,\n#   x5_year_average_2015_2019 <dbl>, date_of_20_year_high <chr>,\n#   date_of_20_year_low <chr>, and abbreviated variable names\n#   ¹​main_pollutant, ²​site_name, ³​x20_year_high_2000_2019\n```\n:::\n:::\n\n\n## Visualizing Durham AQI\n\n::: task\nRecreate the following visualization.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](09-time-series-II_files/figure-revealjs/dch-2022-2-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n<!-- \n\n## Livecoding {.smaller}\n\nReveal below for code developed during live coding session.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\naqi_levels <- aqi_levels |>\n  mutate(aqi_mid = ((aqi_min + aqi_max) / 2))\n\ndch_2022 |>\n  filter(!is.na(aqi_value)) |>\n  ggplot(aes(x = date, y = aqi_value, group = 1)) +\n  geom_rect(\n    data = aqi_levels,\n    aes(\n      ymin = aqi_min, ymax = aqi_max,\n      xmin = as.Date(-Inf), xmax = as.Date(Inf),\n      fill = color, y = NULL, x = NULL\n    )\n  ) +\n  geom_line(linewidth = 1) +\n  scale_fill_identity() +\n  scale_x_date(\n    name = NULL, date_labels = \"%b\",\n    limits = c(ymd(\"2022-01-01\"), ymd(\"2023-03-01\"))\n  ) +\n  geom_text(\n    data = aqi_levels,\n    aes(x = ymd(\"2023-02-28\"), y = aqi_mid, label = level),\n    hjust = 1, size = 6, fontface = \"bold\", color = \"white\"\n  ) +\n  annotate(\n    geom = \"text\",\n    x = c(ymd(\"2022-01-01\"), ymd(\"2023-03-01\")), y = -100,\n    label = c(\"2022\", \"2023\"), size = 4\n  ) +\n  coord_cartesian(clip = \"off\", ylim = c(0, 400)) +\n  labs(\n    x = NULL, y = \"AQI\",\n    title = \"Ozone and PM2.5 Daily AQI Values\",\n    subtitle = \"Durham-Chapel Hill, NC\",\n    caption = \"\\nSource: EPA Daily Air Quality Tracker\"\n  ) +\n  theme(\n    plot.title.position = \"plot\",\n    panel.grid.minor.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    plot.margin = unit(c(1, 1, 3, 1), \"lines\")\n  )\n```\n:::\n\n\n-->\n\n## Another visualization of Durham AQI\n\n::: task\nRecreate the following visualization.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](09-time-series-II_files/figure-revealjs/dch-2022-3-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n<!-- \n\n## Livecoding {.smaller}\n\nReveal below for code developed during live coding session.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndch_2022 |>\n  filter(!is.na(aqi_value)) |>\n  ggplot(aes(x = date, y = aqi_value, group = 1)) +\n  geom_line(linewidth = 1) +\n  scale_x_date(\n    name = NULL, date_labels = \"%b\",\n    limits = c(ymd(\"2022-01-01\"), ymd(\"2023-03-01\"))\n  ) +\n  scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 300, 400)) +\n  geom_text(\n    data = aqi_levels,\n    aes(x = ymd(\"2023-02-28\"), y = aqi_mid, label = level, color = darken(color, 0.3)),\n    hjust = 1, size = 6, fontface = \"bold\"\n  ) +\n  scale_color_identity() +\n  annotate(\n    geom = \"text\",\n    x = c(ymd(\"2022-01-01\"), ymd(\"2023-03-01\")), y = -80,\n    label = c(\"2022\", \"2023\"), size = 4\n  ) +\n  coord_cartesian(clip = \"off\", ylim = c(0, 400)) +\n  labs(\n    x = NULL, y = \"AQI\",\n    title = \"Ozone and PM2.5 Daily AQI Values\",\n    subtitle = \"Durham-Chapel Hill, NC\",\n    caption = \"\\nSource: EPA Daily Air Quality Tracker\"\n  ) +\n  theme(\n    plot.title.position = \"plot\",\n    panel.grid.minor.y = element_blank(),\n    panel.grid.minor.x = element_blank()\n  )\n```\n:::\n\n\n-->\n\n## Highlights\n\n-   The **lubridate** package is useful for converting to dates from character strings in a given format, e.g. `mdy()`, `ymd()`, etc.\n\n-   The **colorspace** package is useful for programmatically darkening / lightening colors\n\n-   `scale_x_date`: Set `date_labels` as `\"%b %y\"` for month-2 digit year, `\"%D\"` for date format such as `%m/%d/%y`, etc. See help for `strptime()` for more.\n\n-   `scale_color_identity()` or `scale_fill_identity()` can be useful when your data already represents aesthetic values that ggplot2 can handle directly. By default doesn't produce a legend.\n\n# Calculating cumulatives\n\n## Cumulatives over time\n\n-   When visualizing time series data, a somewhat common task is to calculate cumulatives over time and plot them\n\n-   In our example we'll calculate the number of days with \"good\" AQI ($\\le$ 50) and plot that value on the y-axis and the date on the x-axis\n\n\n\n\n\n## Calculating cumulatives\n\nStep 1. Arrange your data\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_2022 |>\n  select(date, aqi_value) |>\n  filter(!is.na(aqi_value)) |>\n  arrange(date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 364 × 2\n  date       aqi_value\n  <date>         <dbl>\n1 2022-01-01        22\n2 2022-01-02        12\n3 2022-01-03        10\n4 2022-01-04        21\n5 2022-01-05        35\n# … with 359 more rows\n```\n:::\n:::\n\n\n## Calculating cumulatives\n\nStep 2. Identify good days\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_2022 |>\n  select(date, aqi_value) |>\n  filter(!is.na(aqi_value)) |>\n  arrange(date) |>\n  mutate(good_aqi = if_else(aqi_value <= 50, 1, 0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 364 × 3\n  date       aqi_value good_aqi\n  <date>         <dbl>    <dbl>\n1 2022-01-01        22        1\n2 2022-01-02        12        1\n3 2022-01-03        10        1\n4 2022-01-04        21        1\n5 2022-01-05        35        1\n# … with 359 more rows\n```\n:::\n:::\n\n\n## Calculating cumulatives\n\nStep 3. Sum over time\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_2022 |>\n  select(date, aqi_value) |>\n  filter(!is.na(aqi_value)) |>\n  arrange(date) |>\n  mutate(\n    good_aqi = if_else(aqi_value <= 50, 1, 0),\n    cumsum_good_aqi = cumsum(good_aqi)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 364 × 4\n  date       aqi_value good_aqi cumsum_good_aqi\n  <date>         <dbl>    <dbl>           <dbl>\n1 2022-01-01        22        1               1\n2 2022-01-02        12        1               2\n3 2022-01-03        10        1               3\n4 2022-01-04        21        1               4\n5 2022-01-05        35        1               5\n# … with 359 more rows\n```\n:::\n:::\n\n\n## Plotting cumulatives {.smaller}\n\n::: panel-tabset\n### Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](09-time-series-II_files/figure-revealjs/durham-aqi-3-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_2022 |>\n  select(date, aqi_value) |>\n  filter(!is.na(aqi_value)) |>\n  arrange(date) |>\n  mutate(\n    good_aqi = if_else(aqi_value <= 50, 1, 0),\n    cumsum_good_aqi = cumsum(good_aqi)\n  ) |>\n  ggplot(aes(x = date, y = cumsum_good_aqi, group = 1)) +\n  geom_line() +\n  scale_x_date(date_labels = \"%b %Y\") +\n  labs(\n    x = NULL, y = \"Number of days\",\n    title = \"Cumulative number of good AQI days (AQI < 50)\",\n    subtitle = \"Durham-Chapel Hill, NC\",\n    caption = \"\\nSource: EPA Daily Air Quality Tracker\"\n  ) +\n  theme(plot.title.position = \"plot\")\n```\n:::\n\n:::\n\n# Detrending\n\n## Detrending\n\n-   Detrending is removing prominent long-term trend in time series to specifically highlight any notable deviations\n\n-   Let's demonstrate using multiple years of AQI data\n\n## Multiple years of Durham-Chapel Hill data {.smaller}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_files <- fs::dir_ls(here::here(\"data/durham-chapel-hill\"))\ndch_files\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n/Users/mine/Desktop/Teaching/Duke/sta313-s23/vizdata-s23/slides/08/data/durham-chapel-hill/ad_aqi_tracker_data-2016.csv\n/Users/mine/Desktop/Teaching/Duke/sta313-s23/vizdata-s23/slides/08/data/durham-chapel-hill/ad_aqi_tracker_data-2017.csv\n/Users/mine/Desktop/Teaching/Duke/sta313-s23/vizdata-s23/slides/08/data/durham-chapel-hill/ad_aqi_tracker_data-2018.csv\n/Users/mine/Desktop/Teaching/Duke/sta313-s23/vizdata-s23/slides/08/data/durham-chapel-hill/ad_aqi_tracker_data-2019.csv\n/Users/mine/Desktop/Teaching/Duke/sta313-s23/vizdata-s23/slides/08/data/durham-chapel-hill/ad_aqi_tracker_data-2020.csv\n/Users/mine/Desktop/Teaching/Duke/sta313-s23/vizdata-s23/slides/08/data/durham-chapel-hill/ad_aqi_tracker_data-2021.csv\n/Users/mine/Desktop/Teaching/Duke/sta313-s23/vizdata-s23/slides/08/data/durham-chapel-hill/ad_aqi_tracker_data-2022.csv\n```\n:::\n:::\n\n\n## Reading multiple files {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch <- read_csv(dch_files, na = c(\".\", \"\"))\n\ndch <- dch |>\n  janitor::clean_names() |>\n  mutate(\n    date = mdy(date),\n    good_aqi = if_else(aqi_value <= 50, 1, 0)\n  ) |>\n  filter(!is.na(aqi_value)) |>\n  arrange(date) |>\n  mutate(cumsum_good_aqi = cumsum(good_aqi), .after = aqi_value)\n\ndch\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,547 × 13\n  date       aqi_value cumsum_go…¹ main_…² site_…³ site_id source\n  <date>         <dbl>       <dbl> <chr>   <chr>   <chr>   <chr> \n1 2016-01-01        32           1 PM2.5   Durham… 37-063… AQS   \n2 2016-01-02        37           2 PM2.5   Durham… 37-063… AQS   \n3 2016-01-03        45           3 PM2.5   Durham… 37-063… AQS   \n4 2016-01-04        33           4 PM2.5   Durham… 37-063… AQS   \n5 2016-01-05        27           5 PM2.5   Durham… 37-063… AQS   \n# … with 2,542 more rows, 6 more variables:\n#   x20_year_high_2000_2019 <dbl>, x20_year_low_2000_2019 <dbl>,\n#   x5_year_average_2015_2019 <dbl>, date_of_20_year_high <chr>,\n#   date_of_20_year_low <chr>, good_aqi <dbl>, and abbreviated\n#   variable names ¹​cumsum_good_aqi, ²​main_pollutant, ³​site_name\n```\n:::\n:::\n\n\n## Plot trend since 2016 {.smaller}\n\n::: panel-tabset\n### Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](09-time-series-II_files/figure-revealjs/dch-3-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6|7\"}\ndch |>\n  ggplot(aes(x = date, y = cumsum_good_aqi, group = 1)) +\n  geom_smooth(method = \"lm\", color = \"pink\") +\n  geom_line() +\n  scale_x_date(\n    expand = expansion(mult = 0.07),\n    date_labels = \"%Y\"\n  ) +\n  labs(\n    x = NULL, y = \"Number of days\",\n    title = \"Cumulative number of good AQI days (AQI < 50)\",\n    subtitle = \"Durham-Chapel Hill, NC\",\n    caption = \"\\nSource: EPA Daily Air Quality Tracker\"\n  ) +\n  theme(plot.title.position = \"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n:::\n\n:::\n\n## Detrend\n\nStep 1. Fit a simple linear regression\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm <- lm(cumsum_good_aqi ~ date, data = dch)\n\nm\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = cumsum_good_aqi ~ date, data = dch)\n\nCoefficients:\n(Intercept)         date  \n -1.341e+04    7.954e-01  \n```\n:::\n:::\n\n\n## Detrend\n\nStep 2. Augment the data with model results (using `broom::augment()`)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_aug <- augment(m)\n\ndch_aug\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,547 × 8\n  cumsum_good_…¹ date       .fitted .resid    .hat .sigma .cooksd\n           <dbl> <date>       <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n1              1 2016-01-01   -42.8   43.8 0.00157   25.4 0.00234\n2              2 2016-01-02   -42.0   44.0 0.00157   25.4 0.00236\n3              3 2016-01-03   -41.3   44.3 0.00156   25.4 0.00238\n4              4 2016-01-04   -40.5   44.5 0.00156   25.4 0.00240\n5              5 2016-01-05   -39.7   44.7 0.00156   25.4 0.00242\n# … with 2,542 more rows, 1 more variable: .std.resid <dbl>, and\n#   abbreviated variable name ¹​cumsum_good_aqi\n```\n:::\n:::\n\n\n## Detrend\n\nStep 3. Divide the observed value of `cumsum_good_aqi` by the respective value in the long-term trend (i.e., `.fitted`)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_aug <- dch_aug |>\n  mutate(ratio = cumsum_good_aqi / .fitted, .after = .fitted)\n\n\ndch_aug\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,547 × 9\n  cumsum_good_…¹ date       .fitted   ratio .resid    .hat .sigma\n           <dbl> <date>       <dbl>   <dbl>  <dbl>   <dbl>  <dbl>\n1              1 2016-01-01   -42.8 -0.0233   43.8 0.00157   25.4\n2              2 2016-01-02   -42.0 -0.0476   44.0 0.00157   25.4\n3              3 2016-01-03   -41.3 -0.0727   44.3 0.00156   25.4\n4              4 2016-01-04   -40.5 -0.0989   44.5 0.00156   25.4\n5              5 2016-01-05   -39.7 -0.126    44.7 0.00156   25.4\n# … with 2,542 more rows, 2 more variables: .cooksd <dbl>,\n#   .std.resid <dbl>, and abbreviated variable name\n#   ¹​cumsum_good_aqi\n```\n:::\n:::\n\n\n## Visualize detrended data\n\n::: panel-tabset\n### Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](09-time-series-II_files/figure-revealjs/dch-4-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndch_aug |>\n  ggplot(aes(x = date, y = ratio, group = 1)) +\n  geom_hline(yintercept = 1, color = \"gray\") +\n  geom_line() +\n  scale_x_date(\n    expand = expansion(mult = 0.07),\n    date_labels = \"%Y\"\n  ) +\n  labs(\n    x = NULL, y = \"Number of days\\n(detrended)\",\n    title = \"Cumulative number of good AQI days (AQI < 50)\",\n    subtitle = \"Durham-Chapel Hill, NC\",\n    caption = \"\\nSource: EPA Daily Air Quality Tracker\"\n  ) +\n  theme(plot.title.position = \"plot\")\n```\n:::\n\n:::\n\n## Air Quality in Durham\n\n<br><br>\n\n::: hand\nbarely anything interesting happening!\n:::\n\n. . .\n\n::: hand\nlet's look at data from somewhere with a bit more \"interesting\" air quality data...\n:::\n\n## Read in multiple years of SF data {.smaller}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsf_files <- fs::dir_ls(here::here(\"data/san-francisco\"))\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsf <- read_csv(sf_files, na = c(\".\", \"\"))\n\nsf <- sf |>\n  janitor::clean_names() |>\n  mutate(\n    date = mdy(date),\n    good_aqi = if_else(aqi_value <= 50, 1, 0)\n  ) |>\n  filter(!is.na(aqi_value)) |>\n  arrange(date) |>\n  mutate(cumsum_good_aqi = cumsum(good_aqi), .after = aqi_value)\n\nsf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,557 × 13\n  date       aqi_value cumsum_go…¹ main_…² site_…³ site_id source\n  <date>         <dbl>       <dbl> <chr>   <chr>   <chr>   <chr> \n1 2016-01-01        32           1 PM2.5   Durham… 37-063… AQS   \n2 2016-01-02        37           2 PM2.5   Durham… 37-063… AQS   \n3 2016-01-03        45           3 PM2.5   Durham… 37-063… AQS   \n4 2016-01-04        33           4 PM2.5   Durham… 37-063… AQS   \n5 2016-01-05        27           5 PM2.5   Durham… 37-063… AQS   \n# … with 2,552 more rows, 6 more variables:\n#   x20_year_high_2000_2019 <dbl>, x20_year_low_2000_2019 <dbl>,\n#   x5_year_average_2015_2019 <dbl>, date_of_20_year_high <chr>,\n#   date_of_20_year_low <chr>, good_aqi <dbl>, and abbreviated\n#   variable names ¹​cumsum_good_aqi, ²​main_pollutant, ³​site_name\n```\n:::\n:::\n\n\n## Plot trend since 2016 {.smaller}\n\n::: panel-tabset\n### Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](09-time-series-II_files/figure-revealjs/sf-1-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsf |>\n  ggplot(aes(x = date, y = cumsum_good_aqi, group = 1)) +\n  geom_smooth(method = \"lm\", color = \"pink\") +\n  geom_line() +\n  scale_x_date(\n    expand = expansion(mult = 0.07),\n    date_labels = \"%Y\"\n  ) +\n  labs(\n    x = NULL, y = \"Number of days\",\n    title = \"Cumulative number of good AQI days (AQI < 50)\",\n    subtitle = \"San Francisco-Oakland-Hayward, CA\",\n    caption = \"\\nSource: EPA Daily Air Quality Tracker\"\n  ) +\n  theme(plot.title.position = \"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n:::\n\n:::\n\n## Detrend\n\n1.  Fit a simple linear regression\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm_sf <- lm(cumsum_good_aqi ~ date, data = sf)\n```\n:::\n\n\n. . .\n\n2.  Augment the data with model results\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsf_aug <- augment(m_sf)\n```\n:::\n\n\n. . .\n\n3.  Divide the observed value of `cumsum_good_aqi` by the respective value in the long-term trend (i.e., `.fitted`)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsf_aug <- sf_aug |>\n  mutate(ratio = cumsum_good_aqi / .fitted, .after = .fitted)\n```\n:::\n\n\n## Visualize detrended data\n\n::: panel-tabset\n### Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](09-time-series-II_files/figure-revealjs/sf-2-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsf_aug |>\n  ggplot(aes(x = date, y = ratio, group = 1)) +\n  geom_hline(yintercept = 1, color = \"gray\") +\n  geom_line() +\n  scale_x_date(\n    expand = expansion(mult = 0.07),\n    date_labels = \"%Y\"\n  ) +\n  labs(\n    x = NULL, y = \"Number of days\\n(detrended)\",\n    title = \"Cumulative number of good AQI days (AQI < 50)\",\n    subtitle = \"San Francisco-Oakland-Hayward, CA\",\n    caption = \"\\nSource: EPA Daily Air Quality Tracker\"\n  ) +\n  theme(plot.title.position = \"plot\")\n```\n:::\n\n:::\n\n## Detrending\n\n-   In step 2 we fit a very simple model\n\n-   Depending on the complexity you're trying to capture you might choose to fit a much more complex model\n\n-   You can also decompose the trend into multiple trends, e.g. monthly, long-term, seasonal, etc.\n\n::: aside\nInterested in learning more? Take STA 344 - Spatio-temporal analysis!\n:::\n",
    "supporting": [
      "09-time-series-II_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}