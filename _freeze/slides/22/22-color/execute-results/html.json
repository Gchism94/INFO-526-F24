{
  "hash": "a069a0e5d9230e9136357bcfbec727cd",
  "result": {
    "markdown": "---\ntitle: \"Graphic Design with ggplot2\"\nsubtitle: \"Lecture 22\"\ntitle-slide-attributes:\n  data-background-image: ../vizdata-bg.png\n  data-background-size: 800px, cover\n  data-slide-number: none\nformat: revealjs\nhighlight-style: a11y\nexecute:\n  code-link: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rcartocolor)\nlibrary(colorspace)\nlibrary(ggtext)\nlibrary(MetBrewer)\nlibrary(nord)\nlibrary(scico)\nlibrary(ggsci)\nlibrary(ggthemes)\n\n# set theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\n# set width of code output\noptions(width = 65)\n\n# set figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 7,        # 7\" width\n  fig.asp = 0.618,      # the golden ratio\n  fig.retina = 3,       # dpi multiplier for displaying HTML output on retina\n  fig.align = \"center\", # center align figures\n  dpi = 300             # higher dpi, sharper image\n)\n\n# read in london-bikes-custom.csv\nbikes <- readr::read_csv(\n  here::here(\"slides\", \"22\", \"data\", \"london-bikes-custom.csv\"), \n  col_types = \"Dcfffilllddddc\"\n)\n```\n:::\n\n\n# Color Palettes\n\n## Pre-Defined Color Palettes: Viridis\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6|7,8,9,10\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_viridis_d(\n    option = \"plasma\",\n    begin = .3\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-viridis-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Pre-Defined Color Palettes: Viridis\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = month)\n  ) +\n  geom_boxplot() +\n  scale_fill_viridis_d(\n    option = \"plasma\",\n    begin = .3\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-viridis-month-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Pre-Defined Color Palettes: Viridis\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,7|7,9\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    option = \"plasma\",\n    end = .9\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-viridis-cont-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Pre-Defined Color Palettes: Viridis\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    option = \"plasma\",\n    end = .9,\n    direction = -1\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-viridis-cont-rev-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Pre-Defined Color Palettes: Brewer\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_brewer(\n    palette = \"Set1\"\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-brewer-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Pre-Defined Color Palettes: Brewer\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nRColorBrewer::display.brewer.all()\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-brewer-show-all-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n## Pre-Defined Color Palettes: Brewer\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nRColorBrewer::display.brewer.all(colorblindFriendly = TRUE)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-brewer-show-cvd-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n## {rcartocolor}\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  rcartocolor::scale_fill_carto_d(\n    palette = \"Vivid\" \n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## {rcartocolor}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrcartocolor::display_carto_all()\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-show-all-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n## {rcartocolor}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrcartocolor::display_carto_all(colorblind_friendly = TRUE)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-show-cvd-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n## {scico}\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scico::scale_fill_scico_d(\n    palette = \"hawaii\"\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-scico-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## {scico}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscico::scico_palette_show()\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-scico-show-all-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n## {ggsci} and {ggthemes} {.smaller}\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  ggsci::scale_fill_npg()\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-ggsci-1.png){fig-align='center' width=2100}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  ggthemes::scale_fill_gdocs()\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-ggthemes-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n\n## {nord}\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  nord::scale_fill_nord(\n    palette = \"aurora\"\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-nord-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## {nord}\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11,12\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  nord::scale_color_nord(\n    palette = \"silver_mine\",\n    discrete = FALSE\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-nord-cont-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## {MetBrewer}\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  MetBrewer::scale_fill_met_d(\n    name = \"Klimt\"\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-metbrewer-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## {MetBrewer}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nMetBrewer::display_all()\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-metbrewer-show-all-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n## {MetBrewer}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nMetBrewer::display_all(colorblind_only = TRUE)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-metbrewer-show-cvd-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n## {MetBrewer}\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  MetBrewer::scale_color_met_c(\n    name = \"Hiroshige\" \n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-metbrewer-cont-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n# Customize Palettes\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  rcartocolor::scale_fill_carto_d(\n    name = \"Vivid\" \n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-default-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11,12,13\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_pal(\n      name = \"Vivid\", n = 4\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-manual-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"11,12\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_pal(\n      name = \"Vivid\", n = 5\n    )[1:4]\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-custom-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"11,12\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_pal(\n      name = \"Vivid\", n = 6\n    )[c(1, 3:5)]\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-custom-2-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4|13\"}\ncarto_custom <- \n  carto_pal(\n    name = \"Vivid\", n = 6\n  )[c(1, 3:5)]\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_custom\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-custom-assign-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"2,4|13\"}\ncarto_light <- lighten(carto_custom, .8)\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_light\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-light-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"12|6,7,8,9|6|7,9|8|\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(fill = season,\n        fill = after_scale(\n          lighten(fill, .8)\n    ))\n  ) +\n  scale_fill_manual(\n    values = carto_custom\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-afterscale-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9,10,11|7|9|10\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(\n      fill = stage(\n        season,\n        after_scale =\n          lighten(fill, .8)\n      )\n    )\n  ) +\n  scale_fill_manual(\n    values = carto_custom\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-afterscale-stage-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6,11|7,8,9\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          lighten(color, .8)\n    ))\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-afterscale-2-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"11,12,13,14,15,16,17,18|13,14,15,16\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          lighten(color, .8)\n    ))\n  ) +\n  geom_jitter(\n    aes(color = season), \n    position = position_jitterdodge(\n      dodge.width = .75, \n      jitter.width = .2\n    ),\n    alpha = .4\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-afterscale-combined-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"12,13,14,15|14\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          lighten(color, .8)\n        ))\n  ) +\n  geom_jitter(\n    aes(color = season,\n        color = after_scale(\n          darken(color, .3)\n    )), \n    position = position_jitterdodge(\n      dodge.width = .75, \n      jitter.width = .2\n    ),\n    alpha = .4\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-afterscale-combined-2-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Customize Existing Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"13,14,15\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          lighten(color, .8)\n        ))\n  ) +\n  geom_jitter(\n    aes(color = season,\n        color = after_scale(\n          darken(color, .3)\n        )), \n    position = position_jitterdodge(\n      dodge.width = .75, \n      jitter.width = .2\n    ),\n    alpha = .4\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-afterscale-combined-3-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n# Create New Palettes\n\n## Create Sequential Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,10|8,9\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradient(\n    low = \"#28A87D\",\n    high = \"#FFD166\"\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-gradient-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Create Diverging Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,11|8,9,10|10\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradient2(\n    low = \"#663399\",\n    high = \"#993334\",\n    mid = \"grey95\"\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-gradient2-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Create Diverging Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradient2(\n    low = \"#663399\",\n    high = \"#993334\",\n    mid = \"grey92\",\n    midpoint = 10    \n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-gradient2-midpoint-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Create Diverging Palettes\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"12\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradient2(\n    low = \"#663399\",\n    high = \"#993334\",\n    mid = \"grey92\",\n    midpoint = 10,\n    limits = c(-10, 30)   \n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-gradient2-midpoint-limits-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Create Any Palette\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradientn(\n    colors = carto_custom  \n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-gradientn-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Create Any Palette\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradientn(\n    colors = carto_custom,\n    values = c(0, .2, .8, 1)\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-gradientn-weight-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n# Build Your Own<br>`scale_color|fill_*()`\n\n------------------------------------------------------------------------\n\n![Illustration by W. E. B. Du Bois, Courtesy Library of Congress](images/dubois-viz.png){fig-width=\"60%\" fig-alt=\"“Black Lives 1900: W. E. B. Du Bois at the Paris Exposition” reprints some of the striking photographs and graphics that Du Bois and his curators commissioned for the World’s Fair, here the colorful stacked bar chart on income and expenditure of 150 negro families in Atlanta.\" fig-align=\"center\"}\n\n##  {background-image=\"images/dubois-colors.png\" background-position=\"center\" background-size=\"92%\" background-alt=\"Seven colors based on and inspired by the graphic from W. E. B. Du Bois.\"}\n\n## Build Your Own `scale_color|fill_*()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,18|2,3,4,5,6,7,8,9,10,11|13,14,15,16,17|20\"}\ndubois_colors <- function(...) {\n  dubois_cols <- c(\n    `black`    = \"#000000\",\n    `purple`   = \"#582f6c\",\n    `violet`   = \"#94679C\",\n    `pink`     = \"#ef849f\",\n    `softred`  = \"#f4b7a7\",\n    `iceblue`  = \"#bccbf3\",\n    `palegrey` = \"#e4e4e4\"\n  )\n\n  cols <- c(...)\n\n  if (is.null(cols))\n    return (dubois_cols)\n\n  dubois_cols[cols]\n}\n\ndubois_colors(\"black\", \"pink\", \"softred\", \"iceblue\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    black      pink   softred   iceblue \n\"#000000\" \"#ef849f\" \"#f4b7a7\" \"#bccbf3\" \n```\n:::\n:::\n\n\n## Build Your Own `scale_color|fill_*_d()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,2,12,13|3|5,6,7,8|9|11|13|15\"}\ndubois_pal_d <- function(palette = \"default\", reverse = FALSE) {\n  function(n) {\n    if(n > 5) stop('Palettes only contains 5 colors')\n\n    if (palette == \"default\") { pal <- dubois_colors(\"black\", \"violet\", \"softred\", \"iceblue\", \"palegrey\")[1:n] }\n    if (palette == \"dark\") { pal <- dubois_colors(1:5)[1:n] }\n    if (palette == \"light\") { pal <- dubois_colors(3:7)[1:n] }\n    \n    pal <- unname(pal)\n\n    if (reverse) rev(pal) else pal\n  }\n}\n\ndubois_pal_d()(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"#000000\" \"#94679C\" \"#f4b7a7\"\n```\n:::\n:::\n\n\n## Build Your Own `scale_fill|color_*_d()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6,7|9,10,11,12,13,14,15|2,10|4,12|6,14\"}\nscale_color_dubois_d <- function(palette = \"default\", reverse = FALSE, ...) {\n  if (!palette %in% c(\"default\", \"dark\", \"light\")) stop('Palette should be \"default\", \"dark\" or \"light\".')\n\n  pal <- dubois_pal_d(palette = palette, reverse = reverse)\n\n  ggplot2::discrete_scale(\"colour\", paste0(\"dubois_\", palette), palette = pal, ...)\n}\n\nscale_fill_dubois_d <- function(palette = \"default\", reverse = FALSE, ...) {\n  if (!palette %in% c(\"default\", \"dark\", \"light\")) stop('Palette should be \"default\", \"dark\" or \"light\".')\n\n  pal <- dubois_pal_d(palette = palette, reverse = reverse)\n\n  ggplot2::discrete_scale(\"fill\", paste0(\"dubois_\", palette), palette = pal, ...)\n}\n```\n:::\n\n\n## Use Your Own `scale_fill_*_d()`\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4,7\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_dubois_d()\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/dubois-scales-fill-d-use-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Use Your Own `scale_color_*_d()`\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4,7,8,9,10\"}\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        color = season)\n  ) +\n  geom_boxplot() +\n  scale_color_dubois_d(\n    palette = \"dark\",\n    reverse = TRUE\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/dubois-scales-color-d-use-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n# Test Your Palettes\n\n## Emulate CVD\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6|14,15,16\"}\ndeut <- \n  colorspace::deutan(\n    viridis::turbo(\n      n = 100, direction = -1\n    )\n  )\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count,\n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradientn(\n    colors = deut\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/cvd-emulation-deutan-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Emulate CVD\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\ng <- \n  ggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_custom\n  )\n\ng\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/cvd-emulation-all-prep-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Emulate CVD\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\n# devtools::install_github(\n#   \"clauswilke/colorblindr\"\n# )\n\ncolorblindr::cvd_grid(g)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/cvd-emulation-all-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Emulate CVD\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ng2 <- \n  ggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = season)\n  ) +\n  geom_point(size = 2, alpha = .75) +\n  scale_color_manual(\n    values = carto_custom\n  )\n```\n:::\n\n\n## Emulate CVD\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# devtools::install_github(\"clauswilke/colorblindr\")\n\ncolorblindr::cvd_grid(g2)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/cvd-emulation-all-2-1.png){fig-align='center' width=4200}\n:::\n:::\n\n\n## Emulate CVD\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ng3 <- \n  g2 +\n  scale_color_manual(\n    values = c(\"#3c89d9\", \"#1ec99b\", \"#F7B01B\", \"#a26e7c\")\n  )\n```\n:::\n\n\n## Emulate CVD\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# devtools::install_github(\"clauswilke/colorblindr\")\n\ncolorblindr::cvd_grid(g3)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/cvd-emulation-all-3-1.png){fig-align='center' width=4200}\n:::\n:::\n\n\n## <b style='color:#663399;'>Recap</b> {.smaller}\n\n::: recap\n::: incremental\n-   use **categorical** palettes for **qualitative** data\n    -   e.g. `scale_*_discrete()` and `scale_*_manual()` for custom options\n    -   e.g. `scale_*_viridis_d` and `scale_*_brewer()` for pre-defined options\n-   use **sequential or diverging** palettes for **quantitative** data\n    -   e.g. `scale_*_gradient()` or `scale_*_gradient2()` for custom options\n    -   e.g. `scale_*_viridis_c` and `scale_*_distiller()` for pre-defined options\n-   various packages provide palettes incl. `scale_*` components\n    -   e.g. `{rcartocolors}`, `{scico}`, `{ggsci}`, `{ggthemes}`, `{nord}`\n-   those and even more packages return palettes as vectors\n    -   modify and supply them to `scale_*_manual()` and `scale_*_gradientn()`\n-   use **`after_scale`** to modify and recycle color scales\n:::\n:::\n\n# Exercise\n\n## Exercise\n\n::: question\n-   **Create a similar visualization as close as possible:**\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/exercise-jittered-errorbars-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n# Appendix\n\n# HCL Spectrum\n\n## Evaluate HCL Spectrum\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\ncolorspace::specplot(\n  colorspace::diverging_hcl(\n    n = 100, palette = \"Blue-Red\"\n  )\n)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-colorspace-spec-explain-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Evaluate HCL Spectrum\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncolorspace::specplot(\n  scico::scico(\n    n = 100, palette = \"hawaii\"\n  )\n)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-scico-spec-1.png){fig-align='center' width=2100}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncolorspace::specplot(\n  MetBrewer::met.brewer(\n     n = 100, name = \"Hiroshige\"\n  )\n)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-metbrewer-spec-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n\n## Evaluate HCL Spectrum\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncolorspace::specplot(\n  rcartocolor::carto_pal(\n    n = 7, name = \"TealRose\"\n  )\n)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-carto-spec-1.png){fig-align='center' width=2100}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncolorspace::specplot(\n  MetBrewer::met.brewer(\n     n = 100, name = \"Cassatt2\"\n  )\n)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-metbrewer-spec-2-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n\n## Evaluate HCL Spectrum\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncolorspace::specplot(\n  rainbow(\n    n = 100\n  )\n)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palettes-rainbow-spec-1.png){fig-align='center' width=2100}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncolorspace::specplot(\n  viridis::turbo(\n     n = 100, direction = -1\n  )\n)\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/color-palette-viridis-spec-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n\n## Build Your Own `scale_color|fill_*_c()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,13|2,3,4,5|7,8|10|12|15\"}\ndubois_pal_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  dubois_palettes <- list(\n    `dark`    = dubois_colors(\"black\", \"purple\", \"violet\", \"pink\"),\n    `light`   = dubois_colors(\"purple\", \"violet\", \"pink\", \"palered\")\n  )\n\n  pal <- dubois_palettes[[palette]]\n  pal <- unname(pal)\n\n  if (reverse) pal <- rev(pal)\n\n  grDevices::colorRampPalette(pal, ...)\n}\n\ndubois_pal_c(palette = \"light\", reverse = TRUE)(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"#FFFFFF\" \"#C1759D\" \"#582F6C\"\n```\n:::\n:::\n\n\n## Build Your Own `scale_color|fill_*_c()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6,7|9,10,11,12,13,14,15|2,10|4,12|6,14|\"}\nscale_fill_dubois_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  if (!palette %in% c(\"dark\", \"light\")) stop('Palette should be \"dark\" or \"light\".')\n\n  pal <- dubois_pal_c(palette = palette, reverse = reverse)\n\n  ggplot2::scale_fill_gradientn(colours = pal(256), ...)\n}\n\nscale_color_dubois_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  if (!palette %in% c(\"dark\", \"light\")) stop('Palette should be \"dark\" or \"light\".')\n\n  pal <- dubois_pal_c(palette = palette, reverse = reverse)\n\n  ggplot2::scale_color_gradientn(colours = pal(256), ...)\n}\n```\n:::\n\n\n## Use Your Own `scale_color|fill_*_c()`\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,7|7,9\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_dubois_c()\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/dubois-scales-color-c-use-1-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Use Your Own `scale_color|fill_*_c()`\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,9\"}\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_dubois_c(\n    palette = \"light\",\n    reverse = TRUE\n  )\n```\n\n::: {.cell-output-display}\n![](22-color_files/figure-revealjs/dubois-scales-color-c-use-2-1.png){fig-align='center' width=2100}\n:::\n:::\n",
    "supporting": [
      "22-color_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}