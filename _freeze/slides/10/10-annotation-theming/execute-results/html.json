{
  "hash": "180d4b1f60a53f650896ed3a4939670f",
  "result": {
    "markdown": "---\ntitle: Themes, axes, annotations\nsubtitle: Lecture 10\ntitle-slide-attributes:\n  data-background-image: ../vizdata-bg.png\n  data-background-size: stretch\n  data-slide-number: none\nformat: revealjs\nhighlight-style: a11y\nexecute:\n  code-link: true\n  warning: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Warm up\n\n## Announcements\n\n-   ...\n\n## Setup {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(countdown)\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(fs)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(openintro)\nlibrary(colorspace)\n\n# set theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\n# set width of code output\noptions(width = 65)\n\n# set figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 7, # 7\" width\n  fig.asp = 0.618, # the golden ratio\n  fig.retina = 3, # dpi multiplier for displaying HTML output on retina\n  fig.align = \"center\", # center align figures\n  dpi = 300 # higher dpi, sharper image\n)\n```\n:::\n\n\n# Themes\n\n## Complete themes {.smaller}\n\n\n::: {.cell layout-ncol=\"3\" layout-align=\"center\"}\n\n```{.r .cell-code}\np <- ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point()\n\np + theme_gray() + labs(title = \"Gray\")\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=2100}\n:::\n\n```{.r .cell-code}\np + theme_void() + labs(title = \"Void\")\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-2-2.png){fig-align='center' width=2100}\n:::\n\n```{.r .cell-code}\np + theme_dark() + labs(title = \"Dark\")\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-2-3.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Themes from ggthemes {.smaller}\n\n\n::: {.cell layout-ncol=\"3\" layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n\np + theme_fivethirtyeight() + labs(title = \"FiveThirtyEight\")\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=2100}\n:::\n\n```{.r .cell-code}\np + theme_economist() + labs(title = \"Economist\")\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-3-2.png){fig-align='center' width=2100}\n:::\n\n```{.r .cell-code}\np + theme_wsj() + labs(title = \"Wall Street Journal\")\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-3-3.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Themes and color scales from ggthemes\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np + \n  aes(color = species) +\n  scale_color_wsj() +\n  theme_wsj() + \n  labs(title = \"Wall Street Journal\")\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Modifying theme elements\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np + \n  labs(title = \"Palmer penguins\") +\n  theme(\n    plot.title = element_text(color = \"red\", face = \"bold\", family = \"Comic Sans MS\"),\n    plot.background = element_rect(color = \"red\", fill = \"mistyrose\")\n  )\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n# Axes\n\n## Axis breaks\n\n::: task\nHow can the following figure be improved with custom breaks in axes, if at all?\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Context matters\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npac_plot +\n  scale_x_continuous(breaks = seq(from = 2000, to = 2022, by = 2))\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Conciseness matters\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npac_plot +\n  scale_x_continuous(breaks = seq(2000, 2022, 4))\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Precision matters\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npac_plot +\n  scale_x_continuous(breaks = seq(2000, 2022, 4)) +\n  labs(x = \"Election year\")\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n# Annotation\n\n## `geom_text()`\n\nCan be useful when individual observations are identifiable, but can also get overwhelming...\n\n::: task\nHow would you improve this visualization?\n:::\n\n::: panel-tabset\n## Plots\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(state_stats, aes(x = homeownership, y = pop2010)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(state_stats, aes(x = homeownership, y = pop2010)) + \n  geom_text(aes(label = abbr))\n```\n\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n:::\n\n## Discuss\n\nTO DO: Add Slido.\n:::\n\n## Another visualization of Durham AQI\n\n::: task\nRecreate the following visualization.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-annotation-theming_files/figure-revealjs/dch-2022-3-data-viz-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Livecoding {.smaller}\n\nReveal below for code developed during live coding session.\n\n- Prep\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\naqi_levels <- tribble(\n  ~aqi_min, ~aqi_max, ~color,    ~level,\n  0,        50,       \"#D8EEDA\", \"Good\",\n  51,       100,      \"#F1E7D4\", \"Moderate\",\n  101,      150,      \"#F8E4D8\", \"Unhealthy for sensitive groups\",\n  151,      200,      \"#FEE2E1\", \"Unhealthy\",\n  201,      300,      \"#F4E3F7\", \"Very unhealthy\",\n  301,      400,      \"#F9D0D4\", \"Hazardous\"\n) |>\n  mutate(aqi_mid = ((aqi_min + aqi_max) / 2))\n\ndch_2022 <- read_csv(\n  here::here(\"slides/10/\", \"data/durham-chapel-hill/ad_aqi_tracker_data-2022.csv\"),\n  na = c(\".\", \"\")\n) |>\n  janitor::clean_names() |>\n  mutate(date = mdy(date))\n```\n:::\n\n\n- Plot\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndch_2022 |>\n  filter(!is.na(aqi_value)) |>\n  ggplot(aes(x = date, y = aqi_value, group = 1)) +\n  geom_line(linewidth = 1) +\n  scale_x_date(\n    name = NULL, date_labels = \"%b\",\n    limits = c(ymd(\"2022-01-01\"), ymd(\"2023-03-01\"))\n  ) +\n  scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 300, 400)) +\n  geom_text(\n    data = aqi_levels,\n    aes(x = ymd(\"2023-02-28\"), y = aqi_mid, label = level, color = darken(color, 0.3)),\n    hjust = 1, size = 6, fontface = \"bold\"\n  ) +\n  scale_color_identity() +\n  annotate(\n    geom = \"text\",\n    x = c(ymd(\"2022-01-01\"), ymd(\"2023-03-01\")), y = -80,\n    label = c(\"2022\", \"2023\"), size = 4\n  ) +\n  coord_cartesian(clip = \"off\", ylim = c(0, 400)) +\n  labs(\n    x = NULL, y = \"AQI\",\n    title = \"Ozone and PM2.5 Daily AQI Values\",\n    subtitle = \"Durham-Chapel Hill, NC\",\n    caption = \"\\nSource: EPA Daily Air Quality Tracker\"\n  ) +\n  theme(\n    plot.title.position = \"plot\",\n    panel.grid.minor.y = element_blank(),\n    panel.grid.minor.x = element_blank()\n  )\n```\n:::\n",
    "supporting": [
      "10-annotation-theming_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}