{
  "hash": "b81cb2e31e1a40fe49a9b230396fa855",
  "result": {
    "markdown": "---\ntitle: Animation\nsubtitle: Lecture 23\ntitle-slide-attributes:\n  data-background-image: ../vizdata-bg.png\n  data-background-size: stretch\n  data-slide-number: none\nformat: revealjs\nhighlight-style: a11y\nexecute:\n  code-link: true\n  warning: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Warm up\n\n## Announcements\n\n**Remainder of the semester:**\n\n-   Peer evals due Friday at 5pm\n-   Meet with your mentor / TAs\n\n## Setup {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(countdown)\nlibrary(tidyverse)\n\n# set theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\n# set width of code output\noptions(width = 65)\n\n# set figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 7, # 7\" width\n  fig.asp = 0.618, # the golden ratio\n  fig.retina = 3, # dpi multiplier for displaying HTML output on retina\n  fig.align = \"center\", # center align figures\n  dpi = 300 # higher dpi, sharper image\n)\n```\n:::\n\n\n# From last time\n\n## Making of the racing bar chart\n\n# Shiny: High level view\n\n## Shiny {.center}\n\n\nEvery Shiny app has a webpage that the user visits, <br> and behind this webpage there is a computer that serves this webpage by running R.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/high-level-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Shiny {.center}\n\nWhen running your app locally, the computer serving your app is your computer.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/high-level-2.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Shiny {.center}\n\nWhen your app is deployed, the computer serving your app is a web server.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/high-level-3.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Shiny {.center}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/high-level-4.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Demo\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n::: .task\n- Clone the `ae-21` repo.\n- Navigate to the `goog-index` folder, and launch the app by opening the `app.R` file and clicking on *Run App*.\n- Close the app by clicking the stop icon\n- Select view mode in the drop down menu next to Run App\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n<iframe src=\"https://gallery.shinyapps.io/goog-trend-index/?showcase=0\" width=\"100%\" height=\"650px\" data-external=\"1\"></iframe>\n:::\n\n:::\n\n::::\n\n# Anatomy of a Shiny app\n\n## What's in an app?\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(shiny)\nui <- fluidPage()\n\n\nserver <- function(\n    input, \n    output, \n    session) {\n  ...\n}\n\n\nshinyApp(\n  ui = ui, \n  server = server\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n- **User interface** controls the layout and appearance of app\n\n- **Server function** contains instructions needed to build app\n:::\n\n::::\n\n## Data: Ask a manager\n\nSource: Ask a Manager Survey via [TidyTuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2021/2021-05-18)\n\n> This data does not reflect the general population; it reflects Ask a Manager readers who self-selected to respond, which is a very different group (as you can see just from the demographic breakdown below, which is very white and very female).\n\nSome findings [here](https://www.askamanager.org/2021/05/some-findings-from-24000-peoples-salaries.html).\n\n## Data: `manager`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmanager <- read_csv(here::here(\"slides/24\", \"data/survey.csv\"))\nmanager\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26,232 × 18\n   timestamp          how_old_are_you industry          job_title\n   <chr>              <chr>           <chr>             <chr>    \n 1 4/27/2021 11:02:10 25-34           Education (Highe… Research…\n 2 4/27/2021 11:02:22 25-34           Computing or Tech Change &…\n 3 4/27/2021 11:02:38 25-34           Accounting, Bank… Marketin…\n 4 4/27/2021 11:02:41 25-34           Nonprofits        Program …\n 5 4/27/2021 11:02:42 25-34           Accounting, Bank… Accounti…\n 6 4/27/2021 11:02:46 25-34           Education (Highe… Scholarl…\n 7 4/27/2021 11:02:51 25-34           Publishing        Publishi…\n 8 4/27/2021 11:03:00 25-34           Education (Prima… Librarian\n 9 4/27/2021 11:03:01 45-54           Computing or Tech Systems …\n10 4/27/2021 11:03:02 35-44           Accounting, Bank… Senior A…\n# ℹ 26,222 more rows\n# ℹ 14 more variables: additional_context_on_job_title <chr>,\n#   annual_salary <dbl>, other_monetary_comp <dbl>,\n#   currency <chr>, currency_other <chr>,\n#   additional_context_on_income <chr>, country <chr>,\n#   state <chr>, city <chr>,\n#   overall_years_of_professional_experience <chr>, …\n```\n:::\n:::\n\n\n## Livecoding\n\n::: .task\nGo to the `ae-21` project and code along in `manager-survey/app.R`.\n:::\n\n# Interactive visualizations with Shiny\n\n## Highlights\n\nWe will build an app with\n\n- Data pre-processing\n- Dynamic UI elements\n- Linked brushing\n\n##  {#manager-survey-app data-menu-title=\"Manager Survey App\" .center}\n\n::: {.medium .center-align}\n[https://minecr.shinyapps.io/manager-survey](https://minecr.shinyapps.io/manager-survey/)\n:::\n\n\n::: {.cell layout-align=\"center\"}\n<iframe src=\"https://minecr.shinyapps.io/manager-survey/?showcase=0\" width=\"2100\" height=\"550px\" data-external=\"1\"></iframe>\n:::\n\n\n## Livecoding\n\n::: .task\nGo to the `ae-21` project and code along in `manager-survey/app.R`.\n:::\n\n## Livecoding\n\nThe code for the app can be found [here](https://github.com/vizdata-f23/slides/blob/main/20-interactive-visualization/manager-survey/app.R).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}