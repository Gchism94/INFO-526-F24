{
  "hash": "8c2963386605d2ca6ee2d5a0aebe2306",
  "result": {
    "markdown": "---\ntitle: Project 2 preview + <br>Visualizing Likert data I\nsubtitle: Lecture 16\ntitle-slide-attributes:\n  data-background-image: ../vizdata-bg.png\n  data-background-size: 800px, cover\n  data-slide-number: none\nformat: revealjs\nhighlight-style: a11y\nexecute:\n  code-link: true\n  warning: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Warm up\n\n## Announcements\n\n-   HW 3 is due Thursday\n    -   Question 2: Include old figure from project as starting point\n    -   All questions: Add alt text with `fig-alt`\n-   Make sure to reply to \"Sharing your project\" issues on Project 1 if you haven't already\n\n## Setup {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(countdown)\nlibrary(tidyverse)\nlibrary(colorspace)\nlibrary(cowplot)\n\n# set theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\n# set width of code output\noptions(width = 65)\n\n# set figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 7,        # 7\" width\n  fig.asp = 0.618,      # the golden ratio\n  fig.retina = 3,       # dpi multiplier for displaying HTML output on retina\n  fig.align = \"center\", # center align figures\n  dpi = 300             # higher dpi, sharper image\n)\n```\n:::\n\n\n# Quiz review\n\n##  {.center}\n\n::: large\n::: hand\nLet's imagine we're playing a game <br><br> The odds are in your favor: <br> You have a 90% chance of winning!\n:::\n:::\n\n##  {background-image=\"images/Disappearing_dots.gif\" background-size=\"contain\" background-color=\"#cccccc\"}\n\n::: large\n::: hand\nplaying...\n:::\n:::\n\n##  {.center}\n\n::: large\n::: hand\nSorry, you lost. ðŸ˜ž\n:::\n:::\n\n##  {.center}\n\n::: large\n::: hand\nHow does that make you feel?\n:::\n:::\n\n## We are bad at judging uncertainty\n\n-   You had a 10% chance of losing\n\n. . .\n\n-   One in ten playing this game will lose\n\n. . .\n\n-   90% chance of winning is nowhere near a certain win\n\n## It helps to visualize a set of possible outcomes\n\nPossible outcomes from 100 individual games played\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](16-likert-1_files/figure-revealjs/freq-waffle-1.png){fig-align='center' width=45%}\n:::\n:::\n\n\n## Frequency framing\n\nThis type of visualization is called **frequency framing**\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](16-likert-1_files/figure-revealjs/freq-waffle2-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n# Project 2\n\n## Project 2 - potential directions {.smaller}\n\n::: incremental\n-   Present and visualize a technical topic in statistics or mathematics, e.g., Gradient descent, quadrature, autoregressive (AR) models, etc.\n\n-   Build a Shiny app that that has an Instagram-like user interface for applying filters, except not filters but themes for ggplots.\n\n-   Create an R package that provides functionality for a set of ggplot2 themes and/or color palettes.\n\n-   Build a generative art system.\n\n-   Do a deep dive into accessibility for data visualization and build a lesson plan for creating accessible visualizations with ggplot2, R Markdown, and generally within the R ecosystem.\n\n-   Create an interactive and/or animated spatio-temporal visualization on a topic of interest to you, e.g., redistricting, COVID-19, voter suppression, etc.\n\n-   Recreate art pieces with ggplot2.\n\n-   Make a data visualization telling a story and convert it to an illustration, presenting both the computational and artistic piece side by side.\n\n-   Build a dashboard.\n\n-   Or... Visualize a (non-TidyTuesday) dataset, answering a research question of interest to you.\n:::\n\n## Project 2 - all the details\n\n::: large\n<https://vizdata.org/project/project-2.html>\n:::\n\n<br>\n\n::: callout-tip\nBrainstorm a bunch of ideas and discard them until you settle on a topic that everyone in the team is happy with and feels like a good choice for showcasing what you've learned in the class and how you can use that to learn something new and implement for your project.\n:::\n\n## Project 2 - inspiration\n\n-   Evan - Abstractify\n\n-   Mine - Saatli Maarif Takvimi\n\n# Visualizing Likert data\n\n## 2020 Durham City and County Resident Survey\n\n![](images/durham-survey.png){fig-align=\"center\" width=\"400\"}\n\n## Sample survey questions I\n\n![](images/services.png){fig-align=\"center\" width=\"800\"}\n\n## Sample survey questions II\n\n![](images/safety.png){fig-align=\"center\" width=\"800\"}\n\n## Sample survey questions III\n\n![](images/demographics.png){fig-align=\"center\" width=\"800\"}\n\n## `ae-13`\n\nLet's go to `ae-13` and dive in!\n",
    "supporting": [
      "16-likert-1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}