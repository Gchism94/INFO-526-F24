{
  "hash": "4f6eb711a335c7a026ec806a6a07f7c3",
  "result": {
    "markdown": "---\ntitle: Data wrangling - III\nsubtitle: Lecture 7\ntitle-slide-attributes:\n  data-background-image: ../vizdata-bg.png\n  data-background-size: stretch\n  data-slide-number: none\nformat: revealjs\nhighlight-style: a11y\nexecute:\n  code-link: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Warm up\n\n## Announcements\n\n-   ...\n\n## Setup {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(countdown)\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(ggthemes)\nlibrary(gt)\n\n# set theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\n# set width of code output\noptions(width = 65)\n\n# set figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 7,        # 7\" width\n  fig.asp = 0.618,      # the golden ratio\n  fig.retina = 3,       # dpi multiplier for displaying HTML output on retina\n  fig.align = \"center\", # center align figures\n  dpi = 300             # higher dpi, sharper image\n)\n```\n:::\n\n\n# Bringing together multiple data frames\n\n## Scenario 2\n\n::: hand\nWe...\n\nhave **multiple** data frames\n\nwant to want to bring them together so we can plot them\n:::\n\n## \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n## Data: 10 women in science who changed the world {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"ghnsmhukzh\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#ghnsmhukzh .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ghnsmhukzh .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ghnsmhukzh .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ghnsmhukzh .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ghnsmhukzh .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ghnsmhukzh .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ghnsmhukzh .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ghnsmhukzh .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ghnsmhukzh .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ghnsmhukzh .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ghnsmhukzh .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ghnsmhukzh .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ghnsmhukzh .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ghnsmhukzh .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ghnsmhukzh .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ghnsmhukzh .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ghnsmhukzh .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ghnsmhukzh .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ghnsmhukzh .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ghnsmhukzh .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ghnsmhukzh .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ghnsmhukzh .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ghnsmhukzh .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ghnsmhukzh .gt_left {\n  text-align: left;\n}\n\n#ghnsmhukzh .gt_center {\n  text-align: center;\n}\n\n#ghnsmhukzh .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ghnsmhukzh .gt_font_normal {\n  font-weight: normal;\n}\n\n#ghnsmhukzh .gt_font_bold {\n  font-weight: bold;\n}\n\n#ghnsmhukzh .gt_font_italic {\n  font-style: italic;\n}\n\n#ghnsmhukzh .gt_super {\n  font-size: 65%;\n}\n\n#ghnsmhukzh .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#ghnsmhukzh .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ghnsmhukzh .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ghnsmhukzh .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ghnsmhukzh .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ghnsmhukzh .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ghnsmhukzh .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"name\">name</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Ada Lovelace</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Marie Curie</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Janaki Ammal</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Chien-Shiung Wu</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Katherine Johnson</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Rosalind Franklin</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Vera Rubin</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Gladys West</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Flossie Wong-Staal</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\">Jennifer Doudna</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n::: aside\nSource: [Discover Magazine](https://www.discovermagazine.com/the-sciences/meet-10-women-in-science-who-changed-the-world)\n:::\n\n## Inputs\n\n::: panel-tabset\n\n### professions\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprofessions\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   name               profession                        \n   <chr>              <chr>                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n```\n:::\n:::\n\n\n### dates\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndates\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 3\n  name               birth_year death_year\n  <chr>                   <dbl>      <dbl>\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947         NA\n8 Jennifer Doudna          1964         NA\n```\n:::\n:::\n\n\n### works\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nworks\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 2\n  name               known_for                                   \n  <chr>              <chr>                                       \n1 Ada Lovelace       first computer algorithm                    \n2 Marie Curie        theory of radioactivity,  first woman Nobel…\n3 Janaki Ammal       hybrid species, biodiversity protection     \n4 Chien-Shiung Wu    experiment overturning theory of parity     \n5 Katherine Johnson  orbital mechanics critical to sending first…\n6 Vera Rubin         existence of dark matter                    \n7 Gladys West        mathematical modeling of the shape of the E…\n8 Flossie Wong-Staal first to clone HIV and map its genes, which…\n9 Jennifer Doudna    one of the primary developers of CRISPR     \n```\n:::\n:::\n\n\n## Desired output {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   name               profession          birth…¹ death…² known…³\n   <chr>              <chr>                 <dbl>   <dbl> <chr>  \n 1 Ada Lovelace       Mathematician            NA      NA first …\n 2 Marie Curie        Physicist and Chem…      NA      NA theory…\n 3 Janaki Ammal       Botanist               1897    1984 hybrid…\n 4 Chien-Shiung Wu    Physicist              1912    1997 experi…\n 5 Katherine Johnson  Mathematician          1918    2020 orbita…\n 6 Rosalind Franklin  Chemist                1920    1958 <NA>   \n 7 Vera Rubin         Astronomer             1928    2016 existe…\n 8 Gladys West        Mathematician          1930      NA mathem…\n 9 Flossie Wong-Staal Virologist and Mol…    1947      NA first …\n10 Jennifer Doudna    Biochemist             1964      NA one of…\n# … with abbreviated variable names ¹​birth_year, ²​death_year,\n#   ³​known_for\n```\n:::\n:::\n\n\n## Inputs, reminder\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnames(professions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"name\"       \"profession\"\n```\n:::\n\n```{.r .cell-code}\nnames(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"name\"       \"birth_year\" \"death_year\"\n```\n:::\n\n```{.r .cell-code}\nnames(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"name\"      \"known_for\"\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnrow(professions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\nnrow(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8\n```\n:::\n\n```{.r .cell-code}\nnrow(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9\n```\n:::\n:::\n\n:::\n:::\n\n## Joining data frames {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsomething_join(x, y)\n```\n:::\n\n\n-   `left_join()`: all rows from x\n-   `right_join()`: all rows from y\n-   `full_join()`: all rows from both x and y\n-   `semi_join()`: all rows from x where there are matching values in y, keeping just columns from x\n-   `inner_join()`: all rows from x where there are matching values in y, return all combination of multiple matches in the case of multiple matches\n-   `anti_join()`: return all rows from x where there are not matching values in y, never duplicate rows of x\n-   ...\n\n## Setup\n\nFor the next few slides...\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- tibble(\n  id = c(1, 2, 3),\n  value_x = c(\"x1\", \"x2\", \"x3\")\n  )\n\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n     id value_x\n  <dbl> <chr>  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ny <- tibble(\n  id = c(1, 2, 4),\n  value_y = c(\"y1\", \"y2\", \"y4\")\n  )\n\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n     id value_y\n  <dbl> <chr>  \n1     1 y1     \n2     2 y2     \n3     4 y4     \n```\n:::\n:::\n\n:::\n:::\n\n## `left_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/left-join.gif)\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nleft_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      <NA>   \n```\n:::\n:::\n\n:::\n:::\n\n## `left_join()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprofessions |>\n  left_join(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 4\n   name               profession                  birth…¹ death…²\n   <chr>              <chr>                         <dbl>   <dbl>\n 1 Ada Lovelace       Mathematician                    NA      NA\n 2 Marie Curie        Physicist and Chemist            NA      NA\n 3 Janaki Ammal       Botanist                       1897    1984\n 4 Chien-Shiung Wu    Physicist                      1912    1997\n 5 Katherine Johnson  Mathematician                  1918    2020\n 6 Rosalind Franklin  Chemist                        1920    1958\n 7 Vera Rubin         Astronomer                     1928    2016\n 8 Gladys West        Mathematician                  1930      NA\n 9 Flossie Wong-Staal Virologist and Molecular B…    1947      NA\n10 Jennifer Doudna    Biochemist                     1964      NA\n# … with abbreviated variable names ¹​birth_year, ²​death_year\n```\n:::\n:::\n\n\n## `right_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/right-join.gif){style=\"background-color: #FDF6D3\"}\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nright_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 <NA>    y4     \n```\n:::\n:::\n\n:::\n:::\n\n## `right_join()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprofessions |>\n  right_join(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 4\n  name               profession                   birth…¹ death…²\n  <chr>              <chr>                          <dbl>   <dbl>\n1 Janaki Ammal       Botanist                        1897    1984\n2 Chien-Shiung Wu    Physicist                       1912    1997\n3 Katherine Johnson  Mathematician                   1918    2020\n4 Rosalind Franklin  Chemist                         1920    1958\n5 Vera Rubin         Astronomer                      1928    2016\n6 Gladys West        Mathematician                   1930      NA\n7 Flossie Wong-Staal Virologist and Molecular Bi…    1947      NA\n8 Jennifer Doudna    Biochemist                      1964      NA\n# … with abbreviated variable names ¹​birth_year, ²​death_year\n```\n:::\n:::\n\n\n## `full_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/full-join.gif){style=\"background-color: #FDF6D3\"}\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfull_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      <NA>   \n4     4 <NA>    y4     \n```\n:::\n:::\n\n:::\n:::\n\n## `full_join()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndates |>\n  full_join(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 4\n   name               birth_year death_year known_for            \n   <chr>                   <dbl>      <dbl> <chr>                \n 1 Janaki Ammal             1897       1984 hybrid species, biod…\n 2 Chien-Shiung Wu          1912       1997 experiment overturni…\n 3 Katherine Johnson        1918       2020 orbital mechanics cr…\n 4 Rosalind Franklin        1920       1958 <NA>                 \n 5 Vera Rubin               1928       2016 existence of dark ma…\n 6 Gladys West              1930         NA mathematical modelin…\n 7 Flossie Wong-Staal       1947         NA first to clone HIV a…\n 8 Jennifer Doudna          1964         NA one of the primary d…\n 9 Ada Lovelace               NA         NA first computer algor…\n10 Marie Curie                NA         NA theory of radioactiv…\n```\n:::\n:::\n\n\n## `inner_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/inner-join.gif){style=\"background-color: #FDF6D3\"}\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninner_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n```\n:::\n:::\n\n:::\n:::\n\n## `inner_join()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndates |>\n  inner_join(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 4\n  name               birth_year death_year known_for             \n  <chr>                   <dbl>      <dbl> <chr>                 \n1 Janaki Ammal             1897       1984 hybrid species, biodi…\n2 Chien-Shiung Wu          1912       1997 experiment overturnin…\n3 Katherine Johnson        1918       2020 orbital mechanics cri…\n4 Vera Rubin               1928       2016 existence of dark mat…\n5 Gladys West              1930         NA mathematical modeling…\n6 Flossie Wong-Staal       1947         NA first to clone HIV an…\n7 Jennifer Doudna          1964         NA one of the primary de…\n```\n:::\n:::\n\n\n## `semi_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/semi-join.gif){style=\"background-color: #FDF6D3\"}\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsemi_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n     id value_x\n  <dbl> <chr>  \n1     1 x1     \n2     2 x2     \n```\n:::\n:::\n\n:::\n:::\n\n## `semi_join()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndates |>\n  semi_join(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 3\n  name               birth_year death_year\n  <chr>                   <dbl>      <dbl>\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Vera Rubin               1928       2016\n5 Gladys West              1930         NA\n6 Flossie Wong-Staal       1947         NA\n7 Jennifer Doudna          1964         NA\n```\n:::\n:::\n\n\n## `anti_join()`\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/anti-join.gif){style=\"background-color: #FDF6D3\"}\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nanti_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n     id value_x\n  <dbl> <chr>  \n1     3 x3     \n```\n:::\n:::\n\n:::\n:::\n\n## `anti_join()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndates |>\n  anti_join(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  name              birth_year death_year\n  <chr>                  <dbl>      <dbl>\n1 Rosalind Franklin       1920       1958\n```\n:::\n:::\n\n\n## Putting it altogether\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscientists <- professions |>\n  left_join(dates) |>\n  left_join(works)\n\nscientists\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   name               profession          birth…¹ death…² known…³\n   <chr>              <chr>                 <dbl>   <dbl> <chr>  \n 1 Ada Lovelace       Mathematician            NA      NA first …\n 2 Marie Curie        Physicist and Chem…      NA      NA theory…\n 3 Janaki Ammal       Botanist               1897    1984 hybrid…\n 4 Chien-Shiung Wu    Physicist              1912    1997 experi…\n 5 Katherine Johnson  Mathematician          1918    2020 orbita…\n 6 Rosalind Franklin  Chemist                1920    1958 <NA>   \n 7 Vera Rubin         Astronomer             1928    2016 existe…\n 8 Gladys West        Mathematician          1930      NA mathem…\n 9 Flossie Wong-Staal Virologist and Mol…    1947      NA first …\n10 Jennifer Doudna    Biochemist             1964      NA one of…\n# … with abbreviated variable names ¹​birth_year, ²​death_year,\n#   ³​known_for\n```\n:::\n:::\n\n\n## `*_join()` functions\n\n-   From **dplyr**\n-   Incredibly useful for bringing datasets with common information (e.g., unique identifier) together\n-   Use `by` argument when the names of the column containing the common information are not the same across datasets\n-   Always check that the numbers of rows and columns of the result dataset makes sense\n-   Refer to [two-table verbs vignette](https://dplyr.tidyverse.org/articles/two-table.html) when needed\n\n## Visualizing joined data\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](07-wrangle-3_files/figure-revealjs/scientists-gantt-plot-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Livecoding {.smaller}\n\nReveal below for code developed during live coding session.\n\n-   Transform\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nscientists_longer <- scientists |>\n  mutate(\n    birth_year = case_when(\n      name == \"Ada Lovelace\" ~ 1815,\n      name == \"Marie Curie\" ~ 1867,\n      TRUE ~ birth_year\n    ),\n    death_year = case_when(\n      name == \"Ada Lovelace\" ~ 1852,\n      name == \"Marie Curie\" ~ 1934,\n      name == \"Flossie Wong-Staal\" ~ 2020,\n      TRUE ~ death_year\n    ),\n    status = if_else(is.na(death_year), \"alive\", \"deceased\"),\n    death_year = if_else(is.na(death_year), 2021, death_year),\n    known_for = if_else(name == \"Rosalind Franklin\", \"understanding of the molecular structures of DNA \", known_for)\n  ) |>\n  pivot_longer(\n    cols = contains(\"year\"),\n    names_to = \"year_type\",\n    values_to = \"year\"\n  ) |>\n  mutate(death_year_fake = if_else(year == 2021, TRUE, FALSE))\n```\n:::\n\n\n-   Plot\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(scientists_longer, \n       aes(x = year, y = fct_reorder(name, as.numeric(factor(profession))), group = name, color = profession)) +\n  geom_point(aes(shape = death_year_fake), show.legend = FALSE) +\n  geom_line(aes(linetype = status), show.legend = FALSE) +\n  scale_shape_manual(values = c(\"circle\", NA)) +\n  scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  scale_color_colorblind() +\n  scale_x_continuous(expand = c(0.01, 0), breaks = seq(1820, 2020, 50)) +\n  geom_text(aes(y = name, label = known_for), x = 2030, show.legend = FALSE, hjust = 0) +\n  geom_text(aes(label = profession), x = 1809, y = Inf, hjust = 1, vjust = 1, show.legend = FALSE) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = \"Year\", y = NULL,\n    title = \"10 women in science who changed the world\",\n    caption = \"Source: Discover magazine\"\n  ) +\n  facet_grid(profession ~ ., scales = \"free_y\", space = \"free_y\", switch = \"x\") +\n  theme(\n    plot.margin = unit(c(1, 23, 1, 4), \"lines\"),\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.caption = element_text(hjust = 2), # manual hack\n    strip.background = element_blank(),\n    strip.text = element_blank(),\n    axis.title.x = element_text(hjust = 0),\n    panel.background = element_rect(fill = \"#f0f0f0\", color = \"white\"),\n    panel.grid.major = element_line(color = \"white\", size = 0.5)\n  )\n```\n:::\n\n\n## \n\n<center>\n\n<blockquote class=\"twitter-tweet\" width=\"400\" height=\"600\">\n\n<p lang=\"en\" dir=\"ltr\">\n\nTIL: debug = TRUE argument for element_text() in <a href=\"https://twitter.com/hashtag/ggplot2?src=hash&amp;ref_src=twsrc%5Etfw\">#ggplot2</a> \"aids visual debugging by drawing a solid rectangle behind the complete text area, and a point where each label is anchored\" 🤯 <br><br>I don't know how I've never seen this before, it's super helpful! <a href=\"https://t.co/87VVhMpeLm\">pic.twitter.com/87VVhMpeLm</a>\n\n</p>\n\n--- Mine Çetinkaya-Rundel (@minebocek) <a href=\"https://twitter.com/minebocek/status/1437844443588136960?ref_src=twsrc%5Etfw\">September 14, 2021</a>\n\n</blockquote>\n\n\n```{=html}\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n```\n\n</center>\n\n## Gantt charts\n\n<center>\n\n<blockquote class=\"twitter-tweet\">\n\n<p lang=\"en\" dir=\"ltr\">\n\nOh! Also, if this is for a blogpost could I recommend noting that the datviz you've made is called a Gantt chart? <br><br>In my experience that name isn't very well known, but knowing it helps when googling how to customise these charts 😊\n\n</p>\n\n--- Charlie 👩‍💻 (@charliejhadley) <a href=\"https://twitter.com/charliejhadley/status/1437849467793952775?ref_src=twsrc%5Etfw\">September 14, 2021</a>\n\n</blockquote>\n\n\n```{=html}\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n```\n\n</center>\n",
    "supporting": [
      "07-wrangle-3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}