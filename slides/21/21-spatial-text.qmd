---
title: Visualizing geospatial data III
subtitle: Lecture 20
title-slide-attributes:
  data-background-image: ../vizdata-bg.png
  data-background-size: stretch
  data-slide-number: none
format: revealjs
highlight-style: a11y
execute:
  code-link: true
  warning: true
editor_options: 
  chunk_output_type: console
---

# Warm up

## Announcements

-   ...

## Setup {.smaller}

```{r}
#| label: setup
#| message: false

# load packages
library(countdown)
library(tidyverse)
library(ggnewscale)
library(magick)
library(sf)
library(stars)
library(tmap)

# set theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))

# set width of code output
options(width = 65)

# set figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 7, # 7" width
  fig.asp = 0.618, # the golden ratio
  fig.retina = 3, # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 300 # higher dpi, sharper image
)
```

# Using tmap

## From last time

```{r}
elev <- read_stars("data/easter_island/ei_elev.tif")
border <- read_sf("data/easter_island/ei_border.gpkg")
roads <- read_sf("data/easter_island/ei_roads.gpkg")
points <- read_sf("data/easter_island/ei_points.gpkg")
```

## Thematic maps with tmap

> tmap is an actively maintained open-source R-library for drawing thematic maps. The API is based on A Layered Grammar of Graphics and resembles the syntax of ggplot2, a popular R-library for drawing charts.

::: aside
Source: <https://r-tmap.github.io/tmap/>
:::

## Border

```{r}
tm_shape(border) +
  tm_borders()
```

## Border + more

```{r}
#| code-line-numbers: "|3-6"
#| output-location: column-fragment

tm_shape(border) +
  tm_borders() +
  tm_layout(
    main.title = "Easter Island",
    bg.color = "lightblue"
  )
```

## Roads

```{r}
#| code-line-numbers: "|3-7"
#| output-location: column-fragment

tm_shape(border) +
  tm_borders() +
  tm_shape(roads) +
  tm_lines(
    lwd = "strokelwd",
    legend.lwd.show = FALSE
  ) +
  tm_layout(
    main.title = "Easter Island",
    bg.color = "lightblue"
  )
```

## Roads + more

```{r}
#| code-line-numbers: "|7"
#| output-location: column-fragment

tm_shape(border) +
  tm_borders() +
  tm_shape(roads) +
  tm_lines(
    lwd = "strokelwd",
    legend.lwd.show = FALSE,
    col = "type"
  ) +
  tm_layout(
    main.title = "Easter Island",
    bg.color = "lightblue"
  )
```

## Elevation

```{r}
#| code-line-numbers: "|1-2"
#| output-location: column-fragment

tm_shape(elev) +
  tm_raster() +
  tm_shape(border) +
  tm_borders() +
  tm_shape(roads) +
  tm_lines(
    lwd = "strokelwd",
    legend.lwd.show = FALSE
  ) +
  tm_layout(
    main.title = "Easter Island",
    bg.color = "lightblue"
  )
```

## Elevation + more

```{r}
#| code-line-numbers: "|2-5"
#| output-location: column-fragment

tm_shape(elev) +
  tm_raster(
    style = "cont",
    title = "Elevation (m)"
  ) +
  tm_shape(border) +
  tm_borders() +
  tm_shape(roads) +
  tm_lines(
    lwd = "strokelwd",
    legend.lwd.show = FALSE
  ) +
  tm_layout(
    main.title = "Easter Island",
    bg.color = "lightblue"
  )
```

## Elevation + even more

```{r}
#| code-line-numbers: "|5"
#| output-location: column-fragment

tm_shape(elev) +
  tm_raster(
    style = "cont",
    title = "Elevation (m)",
    palette = "-RdYlGn"
  ) +
  tm_shape(border) +
  tm_borders() +
  tm_shape(roads) +
  tm_lines(
    lwd = "strokelwd",
    legend.lwd.show = FALSE
  ) +
  tm_layout(
    main.title = "Easter Island",
    bg.color = "lightblue"
  )
```

## Volcanoes {.smaller}

```{r}
#| code-line-numbers: "|14-16"
#| output-location: column-fragment

tm_shape(elev) +
  tm_raster(
    style = "cont",
    title = "Elevation (m)",
    palette = "-RdYlGn"
  ) +
  tm_shape(border) +
  tm_borders() +
  tm_shape(roads) +
  tm_lines(
    lwd = "strokelwd",
    legend.lwd.show = FALSE
  ) +
  tm_shape(
    points |> filter(type == "volcano")
  ) +
  tm_symbols(
    shape = 24,
    size = "elevation",
    title.size = "Volcanoes (m)"
  ) +
  tm_layout(
    main.title = "Easter Island",
    bg.color = "lightblue"
  )
```

## Other stuff {.smaller}

```{r}
#| code-line-numbers: "|27-30"
#| output-location: slide

tm_graticules(alpha = 0.25) +
  tm_shape(elev) +
  tm_raster(
    style = "cont",
    title = "Elevation (m)",
    palette = "-RdYlGn"
  ) +
  tm_shape(border) +
  tm_borders() +
  tm_shape(roads) +
  tm_lines(
    lwd = "strokelwd",
    legend.lwd.show = FALSE
  ) +
  tm_shape(
    points |> filter(type == "volcano")
  ) +
  tm_symbols(
    shape = 24,
    size = "elevation",
    title.size = "Volcanoes (m)"
  ) +
  tm_layout(
    main.title = "Easter Island",
    bg.color = "lightblue"
  ) +
  tm_compass(position = c("right", "top")) +
  tm_scale_bar() +
  tm_credits("Author, 2021") +
  tm_add_legend(type = "line", col = "black", title = "Roads")
```

## tmap modes {.smaller}

```{r}
map <- tm_graticules(alpha = 0.25) +
  tm_shape(elev) +
  tm_raster(
    style = "cont",
    title = "Elevation (m)",
    palette = "-RdYlGn"
  ) +
  tm_shape(border) +
  tm_borders() +
  tm_shape(roads) +
  tm_lines(
    lwd = "strokelwd",
    legend.lwd.show = FALSE
  ) +
  tm_shape(
    points |> filter(type == "volcano")
  ) +
  tm_symbols(
    shape = 24,
    size = "elevation",
    title.size = "Volcanoes (m)"
  ) +
  tm_layout(
    main.title = "Easter Island",
    bg.color = "lightblue"
  ) +
  tm_compass(position = c("right", "top")) +
  tm_scale_bar() +
  tm_credits("Author, 2021") +
  tm_add_legend(type = "line", col = "black", title = "Roads")
```

## plot

```{r}
#| message: false

tmap_mode("plot")
map
```

## view

```{r}
#| message: false

tmap_mode("view")
map
```

## Tiles {.smaller}

```{r}
#| output-location: slide

tm_basemap(c(osm = "OpenStreetMap", esri = "Esri.WorldStreetMap")) +
  tm_shape(border, is.master = TRUE) +
  tm_borders() +
  tm_shape(roads) +
  tm_lines(
    lwd = "strokelwd",
    legend.lwd.show = FALSE
  ) +
  tm_shape(
    points |> filter(type == "volcano")
  ) +
  tm_symbols(
    size = "elevation",
    legend.size.show = FALSE
  )
```
